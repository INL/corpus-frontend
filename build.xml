<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE project>
<project name="corpus-frontend" default="all" basedir=".">
	<!-- Projectgegevens -->
	<property name="project.name" value="corpus-frontend" />
	<property name="project.version" value="1.0" />

	<!-- Directories -->
	<property name="src" value="src" />
	<property name="build" value="antbuild" />
	<property name="dist" value="dist" />
	
	<!-- Access environment variables with ${ENV.name} -->
	<property environment="ENV" />
	
    <!-- Fail with an error if lib dir was not configured -->
    <fail unless="ENV.ANT_JAVA_LIB_DIR">
        Please set the ANT_JAVA_LIB_DIR environment variable!
        (Should point to the directory where Java libraries can be found,
         e.g. N:\Automatisering\Applicatieontwikkeling\javalibs).
    </fail>

	<!-- Set lib dir from environment variable -->
	<property name="lib" value="${ENV.ANT_JAVA_LIB_DIR}" />
	
    <!--
    // Fail with an error if BlackLab dir was not configured
	<fail unless="ENV.BLACKLAB_PROJECT_DIR">
	    Please set the BLACKLAB_PROJECT_DIR environment variable!
	    (Should point to the directory where you checked out the BlackLab
	     project, so this build script can call BlackLab's build script)
	</fail>
	
    // Set BlackLab dir from environment variable
    <property name="BlackLabDir" value="${ENV.BLACKLAB_PROJECT_DIR}" />
	-->
    
	<!-- Sla timestamp op en maak de build directory -->
	<target name="init">
		<echo message="----- Building ${project.name} -----" />
		<tstamp />
		<mkdir dir="${build}/WEB-INF/classes" />
        <condition property="project-variant" value="hedendaagsnederlands">
            <not>
        	   <isset property="project-variant" />
        	</not>
        </condition>
	    <condition property="war.filename" value="search">
	        <not>
	            <isset property="war.filename" />
	        </not>
	    </condition>
        <echo message="######################################################" />
        <echo message="" />
        <echo message="Project variant: &quot;${project-variant}&quot;" />
        <echo message="" />
        <echo message="######################################################" />
	</target>

	<!-- Compileer de sources -->
	<target name="compile" depends="init">
		<javac includeantruntime="false" source="1.6" target="1.6" encoding="utf-8" debug="true" debuglevel="lines,vars,source" srcdir="${src}" destdir="${build}/WEB-INF/classes">
			<!-- Het te gebruiken classpath voor compileren -->
			<classpath>
				<pathelement path="${java.class.path}/"/>
				<pathelement path="${lib}/log4j-1.2.15.jar" />
				<pathelement path="${lib}/tomcat-7.0/servlet-api.jar" />
				<pathelement path="${lib}/tomcat-7.0/jsp-api.jar" />
				<pathelement path="${lib}/tomcat-7.0/jasper.jar" />
                <pathelement path="${lib}/InlJavaLib-0.7.jar" />
				<pathelement path="${lib}/velocity-1.5/velocity-1.5.jar" />
				<pathelement path="${lib}/velocity-tools-1.4/velocity-tools-generic-1.4.jar" />
				<pathelement path="${lib}/velocity-tools-1.4/velocity-tools-view-1.4.jar" />
				<pathelement path="${lib}/velocity-1.5/lib/commons-collections-3.1.jar" />
				<pathelement path="${lib}/velocity-1.5/lib/commons-lang-2.1.jar" />
				<pathelement path="${lib}/commons-lang-2.6/commons-lang-2.6.jar" />
                <pathelement path="${lib}/commons-configuration-1.9/commons-configuration-1.9.jar" />
                <pathelement path="${lib}/commons-logging-1.1.1/commons-logging-1.1.1.jar" />
				<!-- <pathelement path="${lib}/lucene-3.6.0/lucene-core-3.6.0.jar" />
		        <pathelement path="${lib}/lucene-3.6.0/lucene-highlighter-3.6.0.jar" />
		        <pathelement path="${lib}/lucene-3.6.0/lucene-queries-3.6.0.jar" />
				<pathelement path="${BlackLabDir}/dist/BlackLab.jar" /> -->
			</classpath>
		</javac>
		<!-- Verwijder oude templates, libraries en config files -->
		<delete dir="${build}/WEB-INF/lib" />
		<delete dir="${build}/WEB-INF/templates" />
		<delete dir="${build}/WEB-INF/config" />
		<delete dir="${build}/WEB-INF/stylesheets" /> 
		<delete dir="${build}/css" />
		<delete dir="${build}/img" />
		<delete dir="${build}/js" />
		
		<!-- Kopieer de resources uit de src boom -->
		<copy todir="${build}">
			<fileset dir="WebContent" includes="META-INF/*" />
			<fileset dir="WebContent" includes="WEB-INF/lib/*" />
			<fileset dir="WebContent" includes="WEB-INF/templates/*" />
			<fileset dir="WebContent" includes="WEB-INF/config/*" />
			<fileset dir="WebContent" includes="WEB-INF/stylesheets/*" />
			<fileset dir="WebContent" includes="font/*" />
			<fileset dir="WebContent" includes="js/*" />
			<fileset dir="WebContent" includes="js/vendor/*" />
			<fileset dir="WebContent" includes="css/*" />
			<fileset dir="WebContent" includes="img/*" />
			<fileset dir="WebContent" includes="*" />
		</copy>
		
	</target>
	
	<!-- Copy search.xml, help.inc, about.inc and any custom .xsl files for our
	     desired variant to build/WEB-INF/config/project/ -->
	<target name="copy-variant-files" depends="compile">
		<delete dir="${build}/WEB-INF/config/project" />
		<mkdir dir="${build}/WEB-INF/config/project" />
        <copy todir="${build}/WEB-INF/config/project">
            <fileset dir="WebContent/projectconfigs/${project-variant}" includes="*" />
        </copy>
	</target>

    <!-- Build .war file from the build directory -->
    <target name="war" depends="copy-variant-files">
        <mkdir dir="${dist}" />
        <war warfile="${dist}/${war.filename}.war" webxml="WebContent/WEB-INF/web.xml" basedir="${build}" />
        <echo message="######################################################" />
        <echo message="" />
        <echo message="&quot;${project-variant}&quot; corpus application built!" />
        <echo message="" />
        <echo message="######################################################" />
    </target>
    
    <!-- Build zeebrieven.war (Brieven als Buit) -->
    <target name="brievenalsbuit">
    	<antcall target="war">
            <param name="project-variant" value="brievenalsbuit" />
            <param name="war.filename" value="zeebrieven" />
   		</antcall>
    </target>

	<!-- Build search.war (CHN variant) -->
	<target name="hedendaagsnederlands">
        <antcall target="war">
            <param name="project-variant" value="hedendaagsnederlands" />
            <param name="war.filename" value="search" />
        </antcall>
	</target>

    <!-- Build gysseling.war (Corpus Gysseling) -->
    <target name="gysseling">
        <antcall target="war">
            <param name="project-variant" value="gysseling" />
            <param name="war.filename" value="gysseling" />
        </antcall>
    </target>

    <!-- Build surinaams.war (Corpus Gysseling) -->
    <target name="surinaams">
        <antcall target="war">
            <param name="project-variant" value="surinaams" />
            <param name="war.filename" value="searchsurinaams" />
        </antcall>
    </target>

    <!-- Build .war files for all project variants -->
    <target name="all" depends="hedendaagsnederlands,gysseling,brievenalsbuit,surinaams">
    	<!-- NOP -->
    </target>

	<!-- Ruim de gegenereerde files op -->
	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>
</project>