<template>
	<tr class="hit-details">
		<td colspan="600">
			<HitsTable
				:mainAnnotation="mainAnnotation"

				:dir="dir"
				:html="html"
				:disabled="true"
				:data="hitsInDoc"
			/>

			<!-- <div class="clearfix" style="border-bottom:1px solid #ddd;">
				<div class="col-xs-5 text-right"><strong>{{leftLabel}}</strong></div>
				<div class="col-xs-2 text-center" style="padding: 0;"><strong>Hit</strong></div>
				<div class="col-xs-5"><strong>{{rightLabel}}</strong></div>
			</div>
			<div v-for="(h, index) in context" :key="index" class="clearfix concordance" :dir="dir">
				<HitContextComponent tag="div" class="col-xs-5 text-right" :data="h.before" :html="html"/>
				<HitContextComponent tag="div" class="col-xs-5 text-right" :data="h.match" :html="html"/>
				<HitContextComponent tag="div" class="col-xs-5 text-right" :data="h.after" :html="html"/>
			</div>
			<div class="text-muted clearfix col-xs-12" v-if="hiddenHits">...({{hiddenHits}} more hidden hits)</div> -->
		</td>
	</tr>

</template>

<script lang="ts">
import Vue from 'vue';

import { BLDocResults, BLHitResults, BLHitSnippet } from '@/types/blacklabtypes';

// import HitContextComponent from '@/pages/search/results/table/HitContext.vue';

import {DocRowData} from './DocRow.vue';
import * as AppTypes from '@/types/apptypes';

import { HitRowData } from '@/pages/search/results/table/newtable/HitRow.vue';

export default Vue.extend({
	components: {
		HitContextComponent,
	},
	props: {
		results: Object as () => BLHitResults|BLDocResults,

		data: Object as () => DocRowData,
		mainAnnotation: Object as () => AppTypes.NormalizedAnnotation,
		dir: String as () => 'ltr'|'rtl',
		html: Boolean,
		disabled: Boolean,
	},
	computed: {
		hitsInDoc(): HitRowData[] {
			return this.data.doc.snippets?.map<HitRowData>(s => ({
				type: 'hit',
				hit: s,
				doc: this.data.doc,
				gloss_fields: [],
				hit_first_word_id: '',
				hit_id: '',
				hit_last_word_id: '',
			})) || [];
		}
	}
});
</script>

